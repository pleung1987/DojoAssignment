Document Object Model(DOM)
- When an HTML (or XML) file is interpreted by a browser, it also generates what we call the Document
Object Model (DOM)

* DOM: a representation of the entire web page as objects.
    -> can manipulate these objects with JavaScript.
    -> When an HTML document is loaded into a web browser, it becomes a document object.
    -> document object is the root node of the HTML document and the "owner" of all other nodes:
        (element nodes, text nodes, attribute nodes, and comment nodes).
    ->  document object provides properties and methods to access all node objects, from within JavaScript

Examples of DOM  properties and methods:
*The following properties and methods can be used on HTML documents:

    Property / Method	                           Description
    document.activeElement	     Returns the currently focused element in the document
    document.addEventListener()	    Attaches an event handler to the document
    document.adoptNode()	               Adopts a node from another document

NOTE: look at https://www.w3schools.com/jsref/dom_obj_document.asp for more documentations

* Think of the document as a big container, inside of which sits information (properties)
    and instructions (methods).
*  You can access these objects – for example, the body – by calling  document.body in the console.
* In other instances, fetching the object requires you to use a built-in method such as
    getElementsByTagName ( e.g. document.getElementsByTagName('div')).
        -> this will return an array of DOM Elements.

- Can manipulate DOM using JS on inspect function:
    ie.
    var bod = document.body;
                // this is more fun if it's a random page with stuff already on it
                (like the learning platform for example).
    bod.innerHTML = "<h1>Hello World</h1>";

or//

    var bod = document.body;
    for (var i = 0; i < 10; i ++){
      bod.innerHTML += "<p> This has gone through the loop completely: " +i+ " times </p>";
    }

 DOM elements can listen for events.:
        var paragraphs = document.getElementsByTagName('p');
            console.log(paragraphs);
        for (var i = 0; i < paragraphs.length; i ++){
            console.log(paragraphs[i].addEventListener);
            paragraphs[i].addEventListener('click', function(){
            this.style.background='blue';
          });
        }

* By layering some functionality atop regular JavaScript, the DOM becomes much easier to manipulate.
    ->  means faster development and, hopefully, a better end product.
        -> By using AngularJS.
